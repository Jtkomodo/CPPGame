; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28315.0 

	TITLE	D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__BD3EDE1B_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__EC2FBCF1_cstdlib DB 01H
__4877352E_type_traits DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__CDF80030_limits DB 01H
__C0436A37_cmath DB 01H
__8FA2E757_func_common@inl DB 01H
__B0C4CEA9_malloc@h DB 01H
__CFCEF810_vcruntime_exception@h DB 01H
__CB7CF65A_exception DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__A29A7DFB_string@h DB 01H
__45864D8F_xutility DB 01H
__B1B75AB9_xmemory DB 01H
__C564DC25_xstring DB 01H
__4232CC07_stdexcept DB 01H
__34C7AB85_xcall_once@h DB 01H
__8B9AB9A5_system_error DB 01H
__60622685_vcruntime_typeinfo@h DB 01H
__3559BE96_typeinfo DB 01H
__71560CBE_memory DB 01H
__5D135BB1_xfacet DB 01H
__7242C389_ctype@h DB 01H
__2AD05D5E_xlocinfo DB 01H
__1A5AA814_xlocale DB 01H
__13352A4D_xiosbase DB 01H
__84DDCE03_xlocnum DB 01H
__735DEEF4_ios DB 01H
__AD055AC7_Entity@h DB 01H
__948EB9CE_Entity@cpp DB 01H
__6A9A47EA_istream DB 01H
__094A72D0_ostream DB 01H
__409274BB_streambuf DB 01H
__0111D5B6_iosfwd DB 01H
__DB22397A_utility DB 01H
__2C3DAE68_xstddef DB 01H
__C1707A8C_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0Entity@@QAE@PAVModel@@U?$vec@$02M$0A@@glm@@1M@Z ; Entity::Entity
PUBLIC	?Draw@Entity@@QAEXXZ				; Entity::Draw
PUBLIC	?setPosition@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z ; Entity::setPosition
PUBLIC	?setRotation@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z ; Entity::setRotation
PUBLIC	?setscale@Entity@@QAEXM@Z			; Entity::setscale
PUBLIC	?setModel@Entity@@QAEXPAVModel@@@Z		; Entity::setModel
PUBLIC	?getTRS@Entity@@QAE?AU?$mat@$03$03M$0A@@glm@@XZ	; Entity::getTRS
PUBLIC	?getPosition@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ ; Entity::getPosition
PUBLIC	?getRotation@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ ; Entity::getRotation
PUBLIC	?getscale@Entity@@QAEMXZ			; Entity::getscale
PUBLIC	?getModel@Entity@@QAEPAVModel@@XZ		; Entity::getModel
PUBLIC	__JustMyCode_Default
EXTRN	?Draw@Model@@QAEXXZ:PROC			; Model::Draw
EXTRN	?getmatrix@@YA?AU?$mat@$03$03M$0A@@glm@@U?$vec@$02M$0A@@2@0M@Z:PROC ; getmatrix
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__fltused:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?getModel@Entity@@QAEPAVModel@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getModel@Entity@@QAEPAVModel@@XZ PROC			; Entity::getModel, COMDAT
; _this$ = ecx

; 53   : 	Model* Entity::getModel() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 54   : 
; 55   : 		return m;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 56   : 
; 57   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getModel@Entity@@QAEPAVModel@@XZ ENDP			; Entity::getModel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?getscale@Entity@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getscale@Entity@@QAEMXZ PROC				; Entity::getscale, COMDAT
; _this$ = ecx

; 70   : 	float Entity::getscale() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 71   : 		return Entity::scale;

	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+28]

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getscale@Entity@@QAEMXZ ENDP				; Entity::getscale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?getRotation@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getRotation@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ PROC	; Entity::getRotation, COMDAT
; _this$ = ecx

; 65   : 	glm::vec3 Entity::getRotation() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 66   : 		return Entity::rotation;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getRotation@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ ENDP	; Entity::getRotation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?getPosition@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getPosition@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ PROC	; Entity::getPosition, COMDAT
; _this$ = ecx

; 60   : 	glm::vec3 Entity::getPosition() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 61   : 		return Entity::position;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 62   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPosition@Entity@@QAE?AU?$vec@$02M$0A@@glm@@XZ ENDP	; Entity::getPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?getTRS@Entity@@QAE?AU?$mat@$03$03M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getTRS@Entity@@QAE?AU?$mat@$03$03M$0A@@glm@@XZ PROC	; Entity::getTRS, COMDAT
; _this$ = ecx

; 75   : 	glm::mat4 Entity::getTRS() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 76   : 
; 77   : 		return Entity::trs;

	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 32					; 00000020H
	mov	ecx, 16					; 00000010H
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	rep movsd
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 78   : 
; 79   : 
; 80   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getTRS@Entity@@QAE?AU?$mat@$03$03M$0A@@glm@@XZ ENDP	; Entity::getTRS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?setModel@Entity@@QAEXPAVModel@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_model$ = 8						; size = 4
?setModel@Entity@@QAEXPAVModel@@@Z PROC			; Entity::setModel, COMDAT
; _this$ = ecx

; 25   : 	void Entity::setModel(Model* model) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 26   : 
; 27   : 		Entity::m = model;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [eax], ecx

; 28   : 
; 29   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setModel@Entity@@QAEXPAVModel@@@Z ENDP			; Entity::setModel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?setscale@Entity@@QAEXM@Z
_TEXT	SEGMENT
$T1 = -272						; size = 64
_this$ = -8						; size = 4
_scale$ = 8						; size = 4
?setscale@Entity@@QAEXM@Z PROC				; Entity::setscale, COMDAT
; _this$ = ecx

; 45   : 	void Entity::setscale(float scale) {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 46   : 		Entity::scale = scale;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [eax+28], xmm0

; 47   : 		Entity::trs = getmatrix(position, rotation, scale);

	push	ecx
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?getmatrix@@YA?AU?$mat@$03$03M$0A@@glm@@U?$vec@$02M$0A@@2@0M@Z ; getmatrix
	add	esp, 32					; 00000020H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 32					; 00000020H
	mov	ecx, 16					; 00000010H
	mov	esi, eax
	rep movsd

; 48   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setscale@Entity@@QAEXM@Z ENDP				; Entity::setscale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?setRotation@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = -272						; size = 64
_this$ = -8						; size = 4
_Rotation$ = 8						; size = 12
?setRotation@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z PROC	; Entity::setRotation, COMDAT
; _this$ = ecx

; 39   : 	void Entity::setRotation(glm::vec3 Rotation) {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 40   : 		Entity::rotation =Rotation;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _Rotation$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _Rotation$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _Rotation$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 41   : 		Entity::trs = getmatrix(position, rotation, scale);

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?getmatrix@@YA?AU?$mat@$03$03M$0A@@glm@@U?$vec@$02M$0A@@2@0M@Z ; getmatrix
	add	esp, 32					; 00000020H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 32					; 00000020H
	mov	ecx, 16					; 00000010H
	mov	esi, eax
	rep movsd

; 42   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setRotation@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z ENDP	; Entity::setRotation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?setPosition@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z
_TEXT	SEGMENT
$T1 = -272						; size = 64
_this$ = -8						; size = 4
_position$ = 8						; size = 12
?setPosition@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z PROC	; Entity::setPosition, COMDAT
; _this$ = ecx

; 32   : 	void Entity::setPosition(glm::vec3 position) {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 33   : 		Entity::position = position;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _position$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 34   : 		Entity::trs = getmatrix(position, rotation, scale);

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?getmatrix@@YA?AU?$mat@$03$03M$0A@@glm@@U?$vec@$02M$0A@@2@0M@Z ; getmatrix
	add	esp, 32					; 00000020H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 32					; 00000020H
	mov	ecx, 16					; 00000010H
	mov	esi, eax
	rep movsd

; 35   : 	
; 36   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setPosition@Entity@@QAEXU?$vec@$02M$0A@@glm@@@Z ENDP	; Entity::setPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?Draw@Entity@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Draw@Entity@@QAEXXZ PROC				; Entity::Draw, COMDAT
; _this$ = ecx

; 18   : 	void Entity::Draw() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 19   : 		
; 20   : 		(*m).Draw();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Draw@Model@@QAEXXZ			; Model::Draw

; 21   : 	
; 22   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Draw@Entity@@QAEXXZ ENDP				; Entity::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\HeaderFIles\Entity.h
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ??0Entity@@QAE@PAVModel@@U?$vec@$02M$0A@@glm@@1M@Z
_TEXT	SEGMENT
$T1 = -272						; size = 64
_this$ = -8						; size = 4
_model$ = 8						; size = 4
_position$ = 12						; size = 12
_rotation$ = 24						; size = 12
_scale$ = 36						; size = 4
??0Entity@@QAE@PAVModel@@U?$vec@$02M$0A@@glm@@1M@Z PROC	; Entity::Entity, COMDAT
; _this$ = ecx

; 6    : 	Entity::Entity(Model* model, glm::vec3 position, glm::vec3 rotation, float scale) {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\HeaderFIles\Entity.h

; 16   : 	Model *m=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp

; 8    : 	this->m =model;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _model$[ebp]
	mov	DWORD PTR [eax], ecx

; 9    : 		this->position = position;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _position$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 10   : 		this->rotation = rotation;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _rotation$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rotation$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rotation$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 11   : 		this->scale = scale;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [eax+28], xmm0

; 12   : 		this->trs = getmatrix(position,rotation,scale);

	push	ecx
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [esp], xmm0
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _rotation$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rotation$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _rotation$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR _position$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?getmatrix@@YA?AU?$mat@$03$03M$0A@@glm@@U?$vec@$02M$0A@@2@0M@Z ; getmatrix
	add	esp, 32					; 00000020H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 32					; 00000020H
	mov	ecx, 16					; 00000010H
	mov	esi, eax
	rep movsd

; 13   : 		
; 14   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0Entity@@QAE@PAVModel@@U?$vec@$02M$0A@@glm@@1M@Z ENDP	; Entity::Entity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Entity.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __948EB9CE_Entity@cpp
	call	@__CheckForDebuggerJustMyCode@4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
