; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28315.0 

	TITLE	D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Light.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__BD3EDE1B_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__EC2FBCF1_cstdlib DB 01H
__4877352E_type_traits DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__CDF80030_limits DB 01H
__C0436A37_cmath DB 01H
__8FA2E757_func_common@inl DB 01H
__9EF9C857_Light@cpp DB 01H
__05392703_type_vec3@inl DB 01H
msvcjmc	ENDS
PUBLIC	??0Light@@QAE@U?$vec@$02I$0A@@glm@@U?$vec@$02M$0A@@2@@Z ; Light::Light
PUBLIC	?setPosition@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z	; Light::setPosition
PUBLIC	?setColor@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z	; Light::setColor
PUBLIC	?getPosition@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ ; Light::getPosition
PUBLIC	?getColor@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ	; Light::getColor
PUBLIC	??$?4I@?$vec@$02M$0A@@glm@@QAEAAU01@ABU?$vec@$02I$0A@@1@@Z ; glm::vec<3,float,0>::operator=<unsigned int>
PUBLIC	__JustMyCode_Default
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\HeaderFiles\Vendor\glm\detail\type_vec3.inl
;	COMDAT ??$?4I@?$vec@$02M$0A@@glm@@QAEAAU01@ABU?$vec@$02I$0A@@1@@Z
_TEXT	SEGMENT
tv133 = -216						; size = 8
tv90 = -216						; size = 8
tv79 = -216						; size = 8
tv129 = -208						; size = 4
tv86 = -208						; size = 4
tv75 = -208						; size = 4
_this$ = -8						; size = 4
_v$ = 8							; size = 4
??$?4I@?$vec@$02M$0A@@glm@@QAEAAU01@ABU?$vec@$02I$0A@@1@@Z PROC ; glm::vec<3,float,0>::operator=<unsigned int>, COMDAT
; _this$ = ecx

; 215  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __05392703_type_vec3@inl
	call	@__CheckForDebuggerJustMyCode@4

; 216  : 		this->x = static_cast<T>(v.x);

	mov	eax, DWORD PTR _v$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR tv75[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv79[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv79[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax], xmm0

; 217  : 		this->y = static_cast<T>(v.y);

	mov	eax, DWORD PTR _v$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv86[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv90[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv90[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 218  : 		this->z = static_cast<T>(v.z);

	mov	eax, DWORD PTR _v$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv129[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv129[ebp]
	mov	edx, DWORD PTR tv129[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv133[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv133[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 219  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 220  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?4I@?$vec@$02M$0A@@glm@@QAEAAU01@ABU?$vec@$02I$0A@@1@@Z ENDP ; glm::vec<3,float,0>::operator=<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Light.cpp
;	COMDAT ?getColor@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getColor@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ PROC	; Light::getColor, COMDAT
; _this$ = ecx

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9EF9C857_Light@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 27   : 	return Light::color;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 28   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getColor@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ ENDP	; Light::getColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Light.cpp
;	COMDAT ?getPosition@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getPosition@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ PROC	; Light::getPosition, COMDAT
; _this$ = ecx

; 21   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9EF9C857_Light@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 22   : 	return Light::position;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 23   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPosition@Light@@QAE?AU?$vec@$02M$0A@@glm@@XZ ENDP	; Light::getPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Light.cpp
;	COMDAT ?setColor@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_color$ = 8						; size = 12
?setColor@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z PROC	; Light::setColor, COMDAT
; _this$ = ecx

; 16   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9EF9C857_Light@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 17   : 	Light::color = color;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _color$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _color$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 18   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setColor@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z ENDP	; Light::setColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Light.cpp
;	COMDAT ?setPosition@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 12
?setPosition@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z PROC	; Light::setPosition, COMDAT
; _this$ = ecx

; 11   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9EF9C857_Light@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 12   : 	Light::position = position;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _position$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _position$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _position$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 13   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?setPosition@Light@@QAEXU?$vec@$02M$0A@@glm@@@Z ENDP	; Light::setPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\Platformer\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\CPPGame-a38d0db726ab2ff89afdd02c18394bd0c58340c9\PlatformerGame\src\GameEngine\Light.cpp
;	COMDAT ??0Light@@QAE@U?$vec@$02I$0A@@glm@@U?$vec@$02M$0A@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 12
_color$ = 20						; size = 12
??0Light@@QAE@U?$vec@$02I$0A@@glm@@U?$vec@$02M$0A@@2@@Z PROC ; Light::Light, COMDAT
; _this$ = ecx

; 4    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __9EF9C857_Light@cpp
	call	@__CheckForDebuggerJustMyCode@4

; 5    : 	Light::position = position;

	lea	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?4I@?$vec@$02M$0A@@glm@@QAEAAU01@ABU?$vec@$02I$0A@@1@@Z ; glm::vec<3,float,0>::operator=<unsigned int>

; 6    : 	Light::color = color;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _color$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _color$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 7    : 
; 8    : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0Light@@QAE@U?$vec@$02I$0A@@glm@@U?$vec@$02M$0A@@2@@Z ENDP ; Light::Light
_TEXT	ENDS
END
